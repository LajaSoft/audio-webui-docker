---
name: "Build Docker Images :latest"

on:
  pull_request:
    branches:
      - main
      - master
  workflow_dispatch:

permissions:
  contents: read
  packages: write
  pull-requests: write

# One build per branch, cancel out of date builds only on pull requests and feature branches
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: ${{ startsWith(github.ref, 'refs/pull/') || startsWith(github.ref, 'refs/heads/feature') }}

jobs:
  lint-dockerfile:
    runs-on: ubuntu-22.04
    timeout-minutes: 15
    steps:
      - uses: actions/checkout@v3
      - uses: reviewdog/action-hadolint@v1
        with:
          hadolint_ignore: DL3033 DL3003
          fail_on_error: true
          level: error
          reporter: github-pr-review
          filter_mode: added # Only lint added / modified lines
        env:
          REVIEWDOG_GITHUB_API_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  container-build-push:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3
        with:
          ref: ${{ github.ref }}

      - name: Log in to the Container registry
        uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for container
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ghcr.io/${{ github.repository_owner }}/audio-webui-docker
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            ${{ github.ref }}
            latest

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up container Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2

      - name: Available platforms
        run: echo "${{ steps.buildx.outputs.platforms }}"

      - name: Build and push container image
        id: docker_build
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile
          push: ${{ github.event_name != 'pull_request' && ( github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master') }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Image digest
        run: |
          echo "Build completed" >> "$GITHUB_STEP_SUMMARY"
          echo "${{ steps.docker_build.outputs.digest }}" >> "$GITHUB_STEP_SUMMARY"
